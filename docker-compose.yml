services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 10

  back-end:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    restart: always
    expose:
      - "3000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - SECRET_KEY=${SECRET_KEY}
      - STRIPE_TOKEN=${STRIPE_TOKEN}
      - BASE_URL=${BASE_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  front-end:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    restart: always
    expose:
      - "3001"
    depends_on:
      - back-end
    # Healthcheck removido aqui

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      back-end:
        condition: service_healthy
      front-end:
        condition: service_started 

volumes:
  postgres-data: